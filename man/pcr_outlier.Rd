% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pcr_outlier.R
\name{filter_replicat}
\alias{filter_replicat}
\alias{coa_function}
\alias{bray_function}
\alias{pcr_outlier}
\title{Identifying the replicate that doesn't replicating}
\usage{
filter_replicat(sub_matrix, threshold)

coa_function(reads)

bray_function(reads)

pcr_outlier(
  metabarlist,
  FUN = bray_function,
  groups = metabarlist$pcrs$sample_id,
  graphics = FALSE
)
}
\arguments{
\item{sub_matrix}{a distance matrix for replicates comparisons}

\item{threshold}{a threshold below which a pcr is considered as outlier}

\item{metabarlist}{a \code{metabarlist} object}

\item{FUN}{a function returning a distance matrix. The distance matrix should be a object `dist` which has the same length of table `reads`.}

\item{groups}{a vector containing the identifier of replicate. The vector must has the same length of the table `PCRs` from a \code{\link{metabarlist}} object. Default = metabarlist$pcrs$sample_id}

\item{graphics}{a boolean value to plot the distances densities for each iteration. Default = FALSE}
}
\value{
data frame with the replicats groups and a column `replicating` or throws a stop
}
\description{
Identifying the non-replicating samples or controls in the table PCRs from a \code{metabarlist} object.
Process many iteration to compare the density for distance within replicate and between replicate.
}
\details{
This function identify the non-replicating samples or controls.

The parameter `groups` defined the groups of replicates. The vector should be sorted like the table `PCRs` from the \code{\link{metabarlist}}.
Note: if the distance within replicate is too higher than the distance between replicate function cannot return result because all replicates are removed.
The parameter `FUN` define the function used to compute the distance matrix. The function must return a object of class `dist` with the same length that its input table.
The default function use the function `decostand` and `vegdist` of package `vegan` to perform a correspondance analysis of \code{\link{metabarlist}} table `reads`, and return a matrix distance.
Default function detail:
bray_function <- function(reads) {
  distance_matrix <- vegdist(decostand(reads, method = 'total'), method='bray')
  return(distance_matrix)
}

When the parameter `graphics` is True, a graphic is plotted with the density of distance within replicate and between replicate. The threshold is also plotted like a vertical line at the intersection of two densities.

Note: when many projects are pulled in the same plate, you must process this function for each project. If you execute this function on many project the variability between projects can be disturbed the calcul of density and then removed all samples for one project.
}
\section{Functions}{
\itemize{
\item \code{filter_replicat}: Identifying the non-replicating samples or controls in the table PCRs from a \code{metabarlist} object.

\item \code{coa_function}: distance function with ade4 package and coa analysis

\item \code{bray_function}: distance function with vegan package and Bray-Curtis distance

\item \code{pcr_outlier}: main function
}}

\examples{
\dontrun{
data(soil_euk)

sample_subset <- subset_metabarlist(soil_euk, "pcrs",
                                    soil_euk$pcrs$type == "sample")
filter_replicat(sample_subset)
}
}
\author{
Frédéric Boyer & Clément Lionnet
}
