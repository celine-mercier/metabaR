% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/m_subset_metabarlist.R
\name{subset_metabarlist}
\alias{subset_metabarlist}
\title{Subset a \code{metabarlist} object}
\usage{
subset_metabarlist(metabarlist, table, indices)
}
\arguments{
\item{metabarlist}{a \code{\link{metabarlist}} object to be subsetted}

\item{table}{the table where the information on which the subsetting is based. Can one of `reads`, `motus`, `pcrs`, or `samples`.}

\item{indices}{a vector of names indicating the elements, i.e. row or column names to keep in the selected table.}
}
\value{
a \code{metabarlist} object that contains only the selected elements.
}
\description{
Subsetting a \code{\link{metabarlist}} object
}
\details{
This subsetting will select specific rows from each table. Factor levels that are unused after selection are dropped.
\itemize{
\item {If the selection is done on `reads`, `pcrs` or `samples`, the MOTUs not occurring in the selection (i.e. those having a total number of reads of 0) are dropped too.}
\item { If the selection is done on `motus`, the pcrs and samples where none of the selected MOTUs are found are kept.}
}
}
\examples{

data(soil_euk)


#Create a subset of soil_euk containing only annelid MOTUs
## get motus names assigned to annelids
annelids_motus = rownames(soil_euk$motus)[grep("Annelida", soil_euk$motus$path)]
## create the metabarlist object
annelids = subset_metabarlist(metabarlist, table = "motus",
                              indices = annelids_motus)
lapply(annelids, dim)

#Create a subset of soil_euk containing only pcrs conducted in plate 1
## get pcrs names from plate 1
plate1_pcrs = rownames(soil_euk$pcrs)[which(metabarlist$pcrs$plate_no == 1)]
plate1 = subset_metabarlist(metabarlist, table = "pcrs",
                            indices = plate1_pcrs)

lapply(plate1, dim)

#Create a subset of soil_euk containing only positive controls
## get pcrs names corresponding to positive controls
poscontrol_pcrs = rownames(soil_euk$pcrs)[which(metabarlist$pcrs$control_type == "positive")]
poscontrols = subset_metabarlist(metabarlist, table = "pcrs",
                            indices = poscontrol_pcrs)

lapply(poscontrols, dim)

}
\author{
Lucie Zinger
}
